// Utilitaire pour tester les services et d√©tecter les erreurs

import { getClientProjects, getAllAdminProjects } from '@/services/projectsService';
import { healthApi } from '@/services/api';

export const testServices = async () => {
  console.log('üß™ Test des services...');
  
  try {
    // Test 1: Sant√© de l'API
    console.log('1. Test de sant√© de l\'API...');
    try {
      await healthApi.checkHealth();
      console.log('‚úÖ API disponible');
    } catch (error) {
      console.log('‚ö†Ô∏è API indisponible, mode fallback actif');
    }

    // Test 2: R√©cup√©ration des projets clients
    console.log('2. Test des projets clients...');
    const clientProjects = await getClientProjects();
    console.log(`‚úÖ ${clientProjects.length} projets clients r√©cup√©r√©s`);

    // Test 3: R√©cup√©ration des projets admin
    console.log('3. Test des projets admin...');
    const adminProjects = await getAllAdminProjects();
    console.log(`‚úÖ ${adminProjects.length} projets admin r√©cup√©r√©s`);

    console.log('‚úÖ Tous les tests pass√©s');
    return true;
  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
    return false;
  }
};

// Auto-test au chargement en mode d√©veloppement
if (import.meta.env.DEV) {
  testServices();
}
